---
# == Work Dir for replicated log
- name: create work dir
  file: path={{ mesos_work_dir }} state=directory

# == Remove default configs
- name: Remove Default Mesos Configs
  file: state=absent path=/etc/mesos/

- name: Remove Mesos ZK File
  file: state=absent path=/etc/mesos/zk

- name: Remove Default Mesos-Master Config
  file: state=absent path=/etc/mesos-master/

- name: Remove Default Mesos-Slave Config
  file: state=absent path=/etc/mesos-slave/

# == Configure and recreate
- name: Mesos default config file
  template: src=conf-mesos.j2 dest=/etc/default/mesos
  notify:
    - Restart mesos-master
    - Restart mesos-slave

- name: Mesos Master config file
  template: src=conf-mesos-master.j2 dest=/etc/default/mesos-master
  when: inventory_hostname in groups['master'] or inventory_hostname in groups['master-slave'] 
  notify:
    - Restart mesos-master

- name: Mesos Slave config file
  template: src=conf-mesos-slave.j2 dest=/etc/default/mesos-slave
  when: inventory_hostname in groups['slave'] or inventory_hostname in groups['master-slave']
  notify:
    - Restart mesos-slave

- name: Mesos master upstart script
  template: src=init-mesos-master.j2 dest=/etc/init/mesos-master.conf
  when:
    - (inventory_hostname in groups['master'] or inventory_hostname in groups['master-slave'])
  notify:
    - Restart mesos-master

- name: Mesos slave upstart script
  template: src=init-mesos-slave.j2 dest=/etc/init/mesos-slave.conf
  when:
    - (inventory_hostname in groups['slave'] or inventory_hostname in groups['master-slave'])
  notify:
    - Restart mesos-slave

- name: Check if systemd exists
  stat: path=/lib/systemd/system/
  register: systemd_check

- name: Mesos master systemd script
  template: src=mesos-master.service.j2 dest=/lib/systemd/system/mesos-master.service
  when: (inventory_hostname in groups['master'] or inventory_hostname in groups['master-slave']) and systemd_check.stat.exists == true
  notify:
    - Reload daemon
    - Restart mesos-master

- name: Mesos slave systemd script
  template: src=mesos-slave.service.j2 dest=/lib/systemd/system/mesos-slave.service
  when: (inventory_hostname in groups['slave'] or inventory_hostname in groups['master-slave']) and systemd_check.stat.exists == true
  notify:
    - Reload daemon
    - Restart mesos-slave

- name: Enable/Disable mesos-master service
  service: name=mesos-master enabled=true
  when: systemd_check.stat.exists == true and inventory_hostname in groups['master']

- name: Enable/Disable mesos-slave service
  service: name=mesos-slave enabled=true
  when: systemd_check.stat.exists == true and inventory_hostname in groups['slave']

- name: Enable/Disable mesos-master and mesos-slave service
  service: name=mesos-master enabled=true
  when: systemd_check.stat.exists == true and inventory_hostname in groups['master-slave']

- name: Enable/Disable mesos-slave and mesos-master service
  service: name=mesos-slave enabled=true
  when: systemd_check.stat.exists == true and inventory_hostname in groups['master-slave']

